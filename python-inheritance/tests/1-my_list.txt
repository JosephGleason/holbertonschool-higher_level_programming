# Import the MyList class
>>> MyList = __import__('1-my_list').MyList

# Create an instance of MyList
>>> my_list = MyList([5, 1, 3, 4, 2])

# Check if print_sorted() outputs the sorted list
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

# Ensure the original list remains unchanged
>>> my_list
[5, 1, 3, 4, 2]

# Test print_sorted() with an empty list
>>> empty_list = MyList([])
>>> empty_list.print_sorted()
[]

# Test print_sorted() with a list of negative numbers
>>> negative_list = MyList([-3, -1, -4, -2, 0])
>>> negative_list.print_sorted()
[-4, -3, -2, -1, 0]

# Test print_sorted() with a list that is already sorted
>>> sorted_list = MyList([1, 2, 3, 4, 5])
>>> sorted_list.print_sorted()
[1, 2, 3, 4, 5]

# Test print_sorted() with a list that is sorted in descending order
>>> descending_list = MyList([5, 4, 3, 2, 1])
>>> descending_list.print_sorted()
[1, 2, 3, 4, 5]

# Test print_sorted() with a list containing duplicate values
>>> duplicates_list = MyList([3, 1, 2, 3, 1, 2])
>>> duplicates_list.print_sorted()
[1, 1, 2, 2, 3, 3]

# Test print_sorted() with a list containing different data types (should raise an error)
>>> mixed_list = MyList([3, "a", 2, "b"])
>>> mixed_list.print_sorted()
Traceback (most recent call last):
    ...
TypeError: '<' not supported between instances of 'str' and 'int'

# Test: Appending a number and printing sorted list
>>> my_list.append(6)
>>> my_list.print_sorted()
[1, 2, 3, 4, 5, 6]
