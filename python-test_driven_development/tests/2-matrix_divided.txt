>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# 1. Basic division, rounding, and original matrix unchanged
>>> mat = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(mat, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> mat  # original matrix must remain intact
[[1, 2, 3], [4, 5, 6]]

# 2. Matrix must be a list of lists
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# 3. Each row must be a list
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# 4. All rows must be the same size
>>> matrix_divided([[1, 2], [1, 2, 3]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# 5. Elements must be int or float
>>> matrix_divided([[1, 2], [3, "4"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# 6. Divisor must be a number
>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# 7. Division by zero
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
